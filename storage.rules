rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidUser() {
      return isAuthenticated() && 
             request.auth.token.email_verified == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImageFile() {
      return request.resource.contentType.matches('image/.*') &&  
             request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }
    
    // Card images - read-only for all users (public assets)
    match /card_images/{cardId} {
      allow read: if true; // Public read access for card images
      allow write: if false; // Only server can upload card images
    }

    // High-resolution card images - read-only
    match /card_images_high_res/{cardId} {
      allow read: if true; // Public read access
      allow write: if false; // Only server can upload
    }

    // Card images organized by set - read-only for all users
    match /cards/{setName}/{cardNumber} {
      allow read: if true; // Public read access for card images by set
      allow write: if false; // Only server can upload card images
    }

    // High-resolution card images organized by set - read-only
    match /high_res_cards/{setName}/{cardNumber} {
      allow read: if true; // Public read access for high-res card images
      allow write: if false; // Only server can upload
    }
    
    // Energy type icons - read-only public assets
    match /energy_icons/{iconName} {
      allow read: if true; // Public read access
      allow write: if false; // Only server can manage
    }
    
    // Profile icons - read-only public assets  
    match /profile_icons/{iconName} {
      allow read: if true; // Public read access for profile icons
      allow write: if false; // Only server can manage profile icons
    }
    
    // User-uploaded content (future feature)
    match /user_uploads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && 
                      isValidUser() &&
                      isValidImageFile();
      allow delete: if isOwner(userId);
    }
    
    // Deck thumbnails/exports (future feature) 
    match /deck_exports/{userId}/{deckId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && 
                      isValidUser() &&
                      isValidImageFile();
      allow delete: if isOwner(userId);
    }
    
    // Temporary files - short-term access
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && 
                           isValidUser() &&
                           isValidImageFile();
      allow delete: if isOwner(userId);
    }
    
    // System backups and admin files - no public access
    match /admin/{fileName} {
      allow read, write: if false; // Only server-side access
    }
    
    match /backups/{fileName} {
      allow read, write: if false; // Only server-side access
    }
    
    // Logs and analytics - no public access
    match /logs/{fileName} {
      allow read, write: if false; // Only server-side access
    }
    
    // Deny all other operations
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}